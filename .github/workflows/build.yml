# .github/workflows/build-debug.yml

name: CI Build (DEBUG)

on:
  workflow_dispatch:

jobs:
  run-build-and-test:
    name: Run Build and Test Suite (DEBUG)
    runs-on: windows-latest
    timeout-minutes: 20 # Shorter timeout for a quick test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup RDP and Start Tunnel
        env:
          RDP_PASSWORD: ${{ secrets.RDP_PASSWORD }}
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        shell: powershell
        run: |
          # --- Using simple, direct commands for debugging ---
          Write-Host "Creating user and enabling RDP..."
          net user runneruser "${{ secrets.RDP_PASSWORD }}" /add
          net localgroup administrators runneruser /add
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Write-Host "RDP setup complete."

          # --- Download and configure ngrok ---
          Write-Host "Downloading and unzipping ngrok..."
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive -Path ngrok.zip -DestinationPath . -Force
          
          # --- Authenticate ngrok ---
          Write-Host "Authenticating ngrok..."
          ./ngrok.exe authtoken $env:NGROK_AUTH_TOKEN

          # --- Run ngrok IN THE FOREGROUND to see its live output ---
          Write-Host "Starting ngrok in the foreground. The log will hang here. This is expected."
          ./ngrok.exe tcp 3389
